syntax = "proto3";

package zitadel.settings.defaultlogin.v2;
option go_package = "github.com/zitadel/zitadel/pkg/grpc/settings/defaultlogin/v2;defaultlogin";

import "protoc-gen-openapiv2/options/annotations.proto";
import "zitadel/object/v2/object.proto";

message GetDomainSettings {
  zitadel.object.v2.ResolvedBool login_name_includes_domain = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "the username has to end with the domain of its organization"
    }
  ];
  zitadel.object.v2.ResolvedBool require_org_domain_verification = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "defines if organization domains should be verified upon creation, otherwise will be created already verified"
    }
  ];

  // We just remove this
  /*
  bool smtp_sender_address_matches_instance_domain = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "defines if the SMTP sender address domain should match an existing domain on the instance"
    }
  ];
   */
}

