name: Version

on:
  workflow_call:
    inputs:
      semantic_version:
        required: true
        type: string
      dry_run:
        required: true
        type: boolean
    outputs:
        version: 
            value: ${{ jobs.generate.outputs.version }}
        published: 
            value: ${{jobs.generate.outputs.published }}

jobs:
  generate:
    runs-on: ubuntu-22.04
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      version: ${{ steps.output.outputs.VERSION }}
      published: ${{ steps.semantic.outputs.new_release_published }}
    steps:
    -
      name: Download release assets
      uses: actions/download-artifact@v3
      with:
        path: .artifacts
    -
      name: Unpack executable
      run: |
        [ -f .artifacts/zitadel-linux-amd64.tar ] && tar -xvf .artifacts/zitadel-linux-amd64.tar || true
        [ -d zitadel-linux-amd64 ] && tar -czvf zitadel-linux-amd64.tar.gz zitadel-linux-amd64 || true
        
        [ -f .artifacts/zitadel-linux-arm64.tar ] && tar -xvf .artifacts/zitadel-linux-arm64.tar || true
        [ -d zitadel-linux-arm64 ] && tar -czvf zitadel-linux-arm64.tar.gz zitadel-linux-arm64 || true
        
        [ -f .artifacts/zitadel-windows-amd64.tar ] && tar -xvf .artifacts/zitadel-windows-amd64.tar || true
        [ -d zitadel-windows-amd64 ] && tar -czvf zitadel-windows-amd64.tar.gz zitadel-windows-amd64 || true
        
        [ -f .artifacts/zitadel-windows-arm64.tar ] && tar -xvf .artifacts/zitadel-windows-arm64.tar || true
        [ -d zitadel-windows-arm64 ] && tar -czvf zitadel-windows-arm64.tar.gz zitadel-windows-arm64 || true
        
        [ -f .artifacts/zitadel-darwin-amd64.tar ] && tar -xvf .artifacts/zitadel-darwin-amd64.tar || true
        [ -d zitadel-darwin-amd64 ] && tar -czvf zitadel-darwin-amd64.tar.gz zitadel-darwin-amd64 || true
        
        [ -f .artifacts/zitadel-darwin-arm64.tar ] && tar -xvf .artifacts/zitadel-darwin-arm64.tar || true
        [ -d zitadel-darwin-arm64 ] && tar -czvf zitadel-darwin-arm64.tar.gz zitadel-darwin-arm64 || true
    - 
      name: Source checkout
      uses: actions/checkout@v3
    - 
      name: Semantic Release
      uses: cycjimmy/semantic-release-action@v3
      id: semantic
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        dry_run: ${{ inputs.dry_run }}
        semantic_version: ${{ inputs.semantic_version }}
        extra_plugins: |
          @semantic-release/exec@6.0.3
    -
      name: output
      id: output
      run:
        if [[ ! -z "${{ steps.semantic.outputs.new_release_version }}" ]]; then echo "VERSION=v${{ steps.semantic.outputs.new_release_version }}" >> "$GITHUB_OUTPUT"; else echo "VERSION=" >> "$GITHUB_OUTPUT";fi
